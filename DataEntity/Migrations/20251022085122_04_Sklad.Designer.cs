// <auto-generated />
using System;
using DataEntity;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataEntity.Migrations
{
    [DbContext(typeof(SkladContext))]
    [Migration("20251022085122_04_Sklad")]
    partial class _04_Sklad
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataEntity.Data.Material", b =>
                {
                    b.Property<int>("MaterialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaterialId"));

                    b.Property<DateTime>("Datum")
                        .HasColumnType("date");

                    b.Property<DateTime>("DatumVytvoreni")
                        .HasColumnType("datetime2");

                    b.Property<string>("Komentar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MernaJednotkaId")
                        .HasColumnType("int");

                    b.Property<int>("MnozDoPal")
                        .HasColumnType("int");

                    b.Property<int>("MnozPoj")
                        .HasColumnType("int");

                    b.Property<string>("Nazev")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("MaterialId");

                    b.HasIndex("MernaJednotkaId");

                    b.ToTable("Materialy");
                });

            modelBuilder.Entity("DataEntity.Data.MernaJednotka", b =>
                {
                    b.Property<int>("MernaJednotkaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MernaJednotkaId"));

                    b.Property<DateTime>("DatumVytvoreni")
                        .HasColumnType("datetime2");

                    b.Property<string>("Popis")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("MernaJednotkaId");

                    b.ToTable("MerneJednotky");
                });

            modelBuilder.Entity("DataEntity.Paleta", b =>
                {
                    b.Property<int>("PaletaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaletaId"));

                    b.Property<string>("AdresaUlozeni")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("DatumVytvoreni")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MaterialId")
                        .HasColumnType("int");

                    b.Property<int>("Mnozstvi")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("Stav")
                        .HasColumnType("int");

                    b.Property<int>("Typ")
                        .HasColumnType("int");

                    b.HasKey("PaletaId");

                    b.HasIndex("MaterialId");

                    b.ToTable("Palety");
                });

            modelBuilder.Entity("DataEntity.Data.Material", b =>
                {
                    b.HasOne("DataEntity.Data.MernaJednotka", "MernaJednotka")
                        .WithMany("Materialy")
                        .HasForeignKey("MernaJednotkaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MernaJednotka");
                });

            modelBuilder.Entity("DataEntity.Paleta", b =>
                {
                    b.HasOne("DataEntity.Data.Material", "Material")
                        .WithMany("Palety")
                        .HasForeignKey("MaterialId");

                    b.Navigation("Material");
                });

            modelBuilder.Entity("DataEntity.Data.Material", b =>
                {
                    b.Navigation("Palety");
                });

            modelBuilder.Entity("DataEntity.Data.MernaJednotka", b =>
                {
                    b.Navigation("Materialy");
                });
#pragma warning restore 612, 618
        }
    }
}
